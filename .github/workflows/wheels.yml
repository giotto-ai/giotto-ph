name: Build Wheels

on : workflow_dispatch

jobs:

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.1
        env:
          # Specify which Python versions to build wheels
          # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          # Skip 32 bit architectures, musllinux, i686, and macOS x86_64 wheels for CP3.8 -- CP3.12
          CIBW_SKIP: "*-win32 *-musllinux_x86_64 *_i686 cp38-macosx_x86_64 cp39-macosx_x86_64 cp310-macosx_x86_64 cp311-macosx_x86_64 cp312-macosx_x86_64"
          CIBW_BEFORE_BUILD: brew install cmake && pip install twine || true
          CIBW_TEST_COMMAND: pytest --pyargs gph
          CIBW_TEST_REQUIRES: pytest hypothesis
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          # Should generate universal2 wheels for CP3.8 -- CP3.12
          CIBW_ARCHS_MACOS: x86_64 universal2

      - name: Set-up python 3.10 for upload
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          twine check ./wheelhouse/*.whl
          twine upload --skip-existing ./wheelhouse/*.whl
